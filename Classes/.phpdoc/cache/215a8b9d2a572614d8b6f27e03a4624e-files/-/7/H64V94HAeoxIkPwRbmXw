1728197201
215a8b9d2a572614d8b6f27e03a4624e-phpdoc%3Aefff01f5f7e538f1b9251bf2d1f3bb00-d24d051c5653eff4f145fba1afe4093b
s:27000:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:12:"FUpdater.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:1:{s:19:"\Classes\Foundation";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:19:"\Classes\Foundation";s:36:" phpDocumentor\Reflection\Fqsen name";s:10:"Foundation";}}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:1:{s:28:"\Classes\Foundation\FUpdater";O:35:"phpDocumentor\Reflection\Php\Class_":15:{s:47:" phpDocumentor\Reflection\Php\Class_ implements";a:0:{}s:46:" phpDocumentor\Reflection\Php\Class_ constants";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ properties";a:1:{s:39:"\Classes\Foundation\FUpdater::$instance";O:37:"phpDocumentor\Reflection\Php\Property":12:{s:44:" phpDocumentor\Reflection\Php\Property types";a:0:{}s:49:" phpDocumentor\Reflection\Php\Property visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:47:" phpDocumentor\Reflection\Php\Property location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:15;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Property endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:15;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:44:" phpDocumentor\Reflection\Php\Property fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:39:"\Classes\Foundation\FUpdater::$instance";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"instance";}s:47:" phpDocumentor\Reflection\Php\Property docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:21:"Instance of the class";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:18:"Classes\Foundation";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:4:{s:6:"VError";s:19:"Classes\View\VError";s:12:"PDOException";s:12:"PDOException";s:7:"Updater";s:15:"Updater\Updater";s:3:"PDO";s:3:"PDO";}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:46:" phpDocumentor\Reflection\Php\Property default";N;s:45:" phpDocumentor\Reflection\Php\Property static";b:1;s:43:" phpDocumentor\Reflection\Php\Property type";N;s:47:" phpDocumentor\Reflection\Php\Property readOnly";b:0;s:47:" phpDocumentor\Reflection\Php\Property metadata";a:0:{}s:49:" phpDocumentor\Reflection\Php\Property attributes";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\Class_ methods";a:3:{s:43:"\Classes\Foundation\FUpdater::__construct()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:19;s:47:" phpDocumentor\Reflection\Location columnNumber";i:244;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:19;s:47:" phpDocumentor\Reflection\Location columnNumber";i:275;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:43:"\Classes\Foundation\FUpdater::__construct()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"__construct";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:7:"private";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:11:"Constructor";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:34;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:43:"\Classes\Foundation\FUpdater::getInstance()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:24;s:47:" phpDocumentor\Reflection\Location columnNumber";i:358;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:31;s:47:" phpDocumentor\Reflection\Location columnNumber";i:534;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:43:"\Classes\Foundation\FUpdater::getInstance()";s:36:" phpDocumentor\Reflection\Fqsen name";s:11:"getInstance";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:29:"Get the instance of the class";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Object_":1:{s:45:" phpDocumentor\Reflection\Types\Object_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:28:"\Classes\Foundation\FUpdater";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"FUpdater";}}}}s:42:" phpDocumentor\Reflection\DocBlock context";r:34;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:1;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}s:40:"\Classes\Foundation\FUpdater::updateDB()";O:35:"phpDocumentor\Reflection\Php\Method":13:{s:46:" phpDocumentor\Reflection\Php\Method arguments";a:0:{}s:45:" phpDocumentor\Reflection\Php\Method location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:35;s:47:" phpDocumentor\Reflection\Location columnNumber";i:583;}s:48:" phpDocumentor\Reflection\Php\Method endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:204;s:47:" phpDocumentor\Reflection\Location columnNumber";i:8102;}s:47:" phpDocumentor\Reflection\Php\Method returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:42:" phpDocumentor\Reflection\Php\Method fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:40:"\Classes\Foundation\FUpdater::updateDB()";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"updateDB";}s:47:" phpDocumentor\Reflection\Php\Method visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:45:" phpDocumentor\Reflection\Php\Method docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:19:"Update the database";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";r:34;s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:45:" phpDocumentor\Reflection\Php\Method abstract";b:0;s:43:" phpDocumentor\Reflection\Php\Method static";b:0;s:42:" phpDocumentor\Reflection\Php\Method final";b:0;s:57:" phpDocumentor\Reflection\Php\Method hasReturnByReference";b:0;s:45:" phpDocumentor\Reflection\Php\Method metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Method attributes";a:0:{}}}s:47:" phpDocumentor\Reflection\Php\Class_ usedTraits";a:0:{}s:45:" phpDocumentor\Reflection\Php\Class_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:10;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:48:" phpDocumentor\Reflection\Php\Class_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:205;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:42:" phpDocumentor\Reflection\Php\Class_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:28:"\Classes\Foundation\FUpdater";s:36:" phpDocumentor\Reflection\Fqsen name";s:8:"FUpdater";}s:45:" phpDocumentor\Reflection\Php\Class_ docBlock";N;s:43:" phpDocumentor\Reflection\Php\Class_ parent";N;s:45:" phpDocumentor\Reflection\Php\Class_ abstract";b:0;s:42:" phpDocumentor\Reflection\Php\Class_ final";b:0;s:45:" phpDocumentor\Reflection\Php\Class_ readOnly";b:0;s:45:" phpDocumentor\Reflection\Php\Class_ metadata";a:0:{}s:47:" phpDocumentor\Reflection\Php\Class_ attributes";a:0:{}}}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"d24d051c5653eff4f145fba1afe4093b";s:39:" phpDocumentor\Reflection\Php\File path";s:23:"Foundation/FUpdater.php";s:41:" phpDocumentor\Reflection\Php\File source";s:8105:"<?php 

namespace Classes\Foundation;

use Classes\View\VError;
use PDOException;
use Updater\Updater;
use PDO;

class FUpdater
{
    /**
     * Instance of the class
     */
    private static $instance;
    /**
     * Constructor
     */
    private function __construct(){}
    /**
     * Get the instance of the class
     * @return FUpdater
     */
    public static function getInstance()
    {
        if (!self::$instance) 
        {
            self::$instance = new FUpdater();
        }
        return self::$instance;
    }
    /**
     * Update the database
     */
    public function updateDB()
    {
        $db=FConnection::getInstance()->getConnection();
        $db->setAttribute(PDO::ATTR_ERRMODE,PDO::ERRMODE_WARNING);
        try
        {
            $db->exec('LOCK TABLES contract WRITE, reservation WRITE');
            include __DIR__.'/../../Updater/day.php';
            $d=$day;
            if($cont==0)
            {
                $db->beginTransaction();
// CONTRACTS UPDATE
                #seleziona gli id dei contratti che dovrebbero essere messi come onGoing
                $q="SELECT 	r.id 
                    FROM reservation r 
                    INNER JOIN contract c ON r.id = c.idReservation             
                    WHERE DateDiff(fromDate, NOW())<=0
                    AND DateDiff(toDate, NOW())>0";
                $stm=$db->prepare($q);
                $stm->execute();
                $res=$stm->fetchAll(PDO::FETCH_COLUMN,0);

                //update contract to onGoing
                if(!empty($res))
                {
                    $ids = implode(',', array_map('intval', $res));
                    $updateQuery = "UPDATE contract SET status = 'onGoing' WHERE idReservation IN ($ids)";
                    $updateStm = $db->prepare($updateQuery);
                    $updateStm->execute();
                }

                //select contract to finished
                $q1="SELECT r.id 
                     FROM reservation r 
                     INNER JOIN contract c ON r.id = c.idReservation           #seleziona gli id dei contratti che dovrebbero essere messi come finished
                     WHERE DateDiff(toDate, NOW())<0";

                $stm1=$db->prepare($q1);
                $stm1->execute();
                $res1=$stm1->fetchAll(PDO::FETCH_COLUMN,0);

                //update contract to finished
                if(!empty($res1))
                {
                    $ids1 = implode(',', array_map('intval', $res1));
                    $updateQuery1 = "UPDATE contract SET status='finished'
                                     WHERE idReservation IN ($ids1)";
                    $updateStm1 = $db->prepare($updateQuery1);
                    $updateStm1->execute();
                }

// RESERVATION UPDATE

                #select the reservation to be accepted
                $q2="WITH freeTable AS (
                                        SELECT DISTINCT 
                                        a1.id AS idAccommodation, 
                                        a1.places - (
                                        SELECT COUNT(*)
                                        FROM contract c2
                                        INNER JOIN reservation r2 ON c2.idReservation = r2.id
                                        WHERE r2.idAccommodation = a1.id AND EXTRACT(YEAR FROM r2.fromDate) = EXTRACT(YEAR FROM r1.fromDate)
                                        ) AS freePlaces, 
                                        EXTRACT(YEAR FROM r1.fromDate) AS year
                                        FROM accommodation a1
                                        INNER JOIN reservation r1 ON a1.id = r1.idAccommodation
                                        )
                                        
                    SELECT DISTINCT r.id
                    FROM reservation r 
                    INNER JOIN accommodation a ON a.id = r.idAccommodation
                    WHERE r.id NOT IN (SELECT r3.id
				    FROM reservation r3
				    INNER JOIN contract c3 ON c3.idReservation = r3.id)
                    AND DATEDIFF(r.made, NOW())<-2
                    AND r.statusAccept = 0
                    AND EXISTS (
                                SELECT 1
                                FROM freeTable ft
                                WHERE ft.idAccommodation = a.id
                                AND ft.year = EXTRACT(YEAR FROM r.fromDate)
                                )
                    ORDER BY r.made ASC";
                $stm2=$db->prepare($q2);
                $stm2->execute();
                $res2=$stm2->fetchAll(PDO::FETCH_COLUMN,0);

                
                //update reservation to accepted after 2 days
                if(!empty($res2))
                {
                    $ids2 = implode(',', array_map('intval', $res2));
                    $updateQuery2 = "UPDATE reservation SET statusAccept = 1, made=CURRENT_TIMESTAMP
                                     WHERE id IN ($ids2)";
                    $updateStm2 = $db->prepare($updateQuery2);
                    $updateStm2->execute();
                }

                

                //select reservation's ids to delete
                $q3="SELECT id
                     FROM reservation
                     WHERE DateDiff(made, NOW())<-2
                     AND id NOT IN (SELECT r1.id
			                        FROM contract c
			                        INNER JOIN reservation r1 ON r1.id = c.idReservation)";

                $stm3=$db->prepare($q3);
                $stm3->execute();
                $res3=$stm3->fetchAll(PDO::FETCH_COLUMN,0);

                //delete reservation after 2 days 
                if(!empty($res3))
                {
                    $ids3 = implode(',', array_map('intval', $res3));
                    $updateQuery3 = "DELETE FROM reservation WHERE id IN ($ids3)";
                    $updateStm3 = $db->prepare($updateQuery3);
                    $updateStm3->execute();
                }


                //delete reservation if there is no more free places
                $q4="DELETE FROM reservation
                     WHERE id IN (
                                  SELECT r2.id
                                  FROM (
                                        SELECT a1.id AS idAccommodation,
                                        (SELECT COUNT(*)
                                         FROM contract c2
                                         INNER JOIN reservation r2 ON c2.idReservation = r2.id
                                         WHERE r2.idAccommodation = a1.id AND EXTRACT(YEAR FROM r2.fromDate) = EXTRACT(YEAR FROM r1.fromDate)
                                        ) AS freePlaces,
                                        EXTRACT(YEAR FROM r1.fromDate) AS year
                                        FROM accommodation a1
                                        INNER JOIN reservation r1 ON a1.id = r1.idAccommodation
                                        ) AS freeTable
                                        INNER JOIN reservation r2 ON freeTable.idAccommodation = r2.idAccommodation
                                        AND freeTable.year = EXTRACT(YEAR FROM r2.fromDate)
                                        WHERE freeTable.freePlaces = 0
                                        )";
                        
                $stm4 = $db->prepare($q4);
                $stm4->execute();

                //END UPDATE OPERATIONS

                $result=$db->commit();
                if($result)
                {
                    Updater::getInstance()->updateDayFile($d,1);
                }
                $db->exec('UNLOCK TABLES');
                return;
            }
            else
            {
                $db->exec('UNLOCK TABLES');
                return;
            }
        }
        catch(PDOException $e)
        {
            $db->rollBack();
            $db->exec('UNLOCK TABLES');
            $viewError= new VError();
            $viewError->error(500);
        }
    }
}";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";